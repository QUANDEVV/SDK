/*
proxima-core-engine

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FavoriteCommunitiesClient struct for FavoriteCommunitiesClient
type FavoriteCommunitiesClient struct {
	Username string `json:"username"`
	Email string `json:"email"`
	Favorites []FavoriteCommunity `json:"favorites"`
}

// NewFavoriteCommunitiesClient instantiates a new FavoriteCommunitiesClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFavoriteCommunitiesClient(username string, email string, favorites []FavoriteCommunity) *FavoriteCommunitiesClient {
	this := FavoriteCommunitiesClient{}
	this.Username = username
	this.Email = email
	this.Favorites = favorites
	return &this
}

// NewFavoriteCommunitiesClientWithDefaults instantiates a new FavoriteCommunitiesClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFavoriteCommunitiesClientWithDefaults() *FavoriteCommunitiesClient {
	this := FavoriteCommunitiesClient{}
	return &this
}

// GetUsername returns the Username field value
func (o *FavoriteCommunitiesClient) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *FavoriteCommunitiesClient) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *FavoriteCommunitiesClient) SetUsername(v string) {
	o.Username = v
}

// GetEmail returns the Email field value
func (o *FavoriteCommunitiesClient) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *FavoriteCommunitiesClient) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *FavoriteCommunitiesClient) SetEmail(v string) {
	o.Email = v
}

// GetFavorites returns the Favorites field value
func (o *FavoriteCommunitiesClient) GetFavorites() []FavoriteCommunity {
	if o == nil {
		var ret []FavoriteCommunity
		return ret
	}

	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value
// and a boolean to check if the value has been set.
func (o *FavoriteCommunitiesClient) GetFavoritesOk() (*[]FavoriteCommunity, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Favorites, true
}

// SetFavorites sets field value
func (o *FavoriteCommunitiesClient) SetFavorites(v []FavoriteCommunity) {
	o.Favorites = v
}

func (o FavoriteCommunitiesClient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["favorites"] = o.Favorites
	}
	return json.Marshal(toSerialize)
}

type NullableFavoriteCommunitiesClient struct {
	value *FavoriteCommunitiesClient
	isSet bool
}

func (v NullableFavoriteCommunitiesClient) Get() *FavoriteCommunitiesClient {
	return v.value
}

func (v *NullableFavoriteCommunitiesClient) Set(val *FavoriteCommunitiesClient) {
	v.value = val
	v.isSet = true
}

func (v NullableFavoriteCommunitiesClient) IsSet() bool {
	return v.isSet
}

func (v *NullableFavoriteCommunitiesClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFavoriteCommunitiesClient(val *FavoriteCommunitiesClient) *NullableFavoriteCommunitiesClient {
	return &NullableFavoriteCommunitiesClient{value: val, isSet: true}
}

func (v NullableFavoriteCommunitiesClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFavoriteCommunitiesClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


