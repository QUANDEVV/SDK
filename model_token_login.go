/*
proxima-core-engine

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TokenLogin struct for TokenLogin
type TokenLogin struct {
	Token int32 `json:"token"`
	Id string `json:"id"`
	TenantId Tenant `json:"tenant_id"`
	Username string `json:"username"`
	FirstName string `json:"first_name"`
	LastName string `json:"last_name"`
	Email string `json:"email"`
	UserType UserTypeFc6Enum `json:"user_type"`
}

// NewTokenLogin instantiates a new TokenLogin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenLogin(token int32, id string, tenantId Tenant, username string, firstName string, lastName string, email string, userType UserTypeFc6Enum) *TokenLogin {
	this := TokenLogin{}
	this.Token = token
	this.Id = id
	this.TenantId = tenantId
	this.Username = username
	this.FirstName = firstName
	this.LastName = lastName
	this.Email = email
	this.UserType = userType
	return &this
}

// NewTokenLoginWithDefaults instantiates a new TokenLogin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenLoginWithDefaults() *TokenLogin {
	this := TokenLogin{}
	return &this
}

// GetToken returns the Token field value
func (o *TokenLogin) GetToken() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *TokenLogin) GetTokenOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *TokenLogin) SetToken(v int32) {
	o.Token = v
}

// GetId returns the Id field value
func (o *TokenLogin) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TokenLogin) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TokenLogin) SetId(v string) {
	o.Id = v
}

// GetTenantId returns the TenantId field value
// If the value is explicit nil, the zero value for Tenant will be returned
func (o *TokenLogin) GetTenantId() Tenant {
	if o == nil {
		var ret Tenant
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenLogin) GetTenantIdOk() (*Tenant, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *TokenLogin) SetTenantId(v Tenant) {
	o.TenantId = v
}

// GetUsername returns the Username field value
func (o *TokenLogin) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *TokenLogin) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *TokenLogin) SetUsername(v string) {
	o.Username = v
}

// GetFirstName returns the FirstName field value
func (o *TokenLogin) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *TokenLogin) GetFirstNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *TokenLogin) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *TokenLogin) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *TokenLogin) GetLastNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *TokenLogin) SetLastName(v string) {
	o.LastName = v
}

// GetEmail returns the Email field value
func (o *TokenLogin) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *TokenLogin) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *TokenLogin) SetEmail(v string) {
	o.Email = v
}

// GetUserType returns the UserType field value
// If the value is explicit nil, the zero value for UserTypeFc6Enum will be returned
func (o *TokenLogin) GetUserType() UserTypeFc6Enum {
	if o == nil {
		var ret UserTypeFc6Enum
		return ret
	}

	return o.UserType
}

// GetUserTypeOk returns a tuple with the UserType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenLogin) GetUserTypeOk() (*UserTypeFc6Enum, bool) {
	if o == nil || o.UserType == nil {
		return nil, false
	}
	return &o.UserType, true
}

// SetUserType sets field value
func (o *TokenLogin) SetUserType(v UserTypeFc6Enum) {
	o.UserType = v
}

func (o TokenLogin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.TenantId != nil {
		toSerialize["tenant_id"] = o.TenantId
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["first_name"] = o.FirstName
	}
	if true {
		toSerialize["last_name"] = o.LastName
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.UserType != nil {
		toSerialize["user_type"] = o.UserType
	}
	return json.Marshal(toSerialize)
}

type NullableTokenLogin struct {
	value *TokenLogin
	isSet bool
}

func (v NullableTokenLogin) Get() *TokenLogin {
	return v.value
}

func (v *NullableTokenLogin) Set(val *TokenLogin) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenLogin) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenLogin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenLogin(val *TokenLogin) *NullableTokenLogin {
	return &NullableTokenLogin{value: val, isSet: true}
}

func (v NullableTokenLogin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenLogin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


